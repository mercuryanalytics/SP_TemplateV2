Metadata(en-US, Question, Label)
EnableBotCheck "EnableBotCheck"
    boolean;

    EnableDuplicateCheck "EnableDuplicateCheck"
    boolean;

    ENABLESLACKALERT "ENABLESLACKALERT"
    boolean;

    IsMobile "IsMobile"
    boolean;

    '''//////////////ERROR MESSAGES////////////////////
    StandardTexts "StandardTexts" block fields
    (
        Errors "Errors" block fields
        (
            MissingAnswer "Missing Answer(s)."
            info;

            NotNumeric "Answer '{ANSWER}' is not numeric."
            info;

            NotInteger "Answer '{ANSWER}' is not an integer value."
            info;

            NotDate "Answer '{ANSWER}' is not a valid date."
            info;

            NotInRange "Answer '{ANSWER}' is not in range '{RANGE}'."
            info;

            NotSingleAnswer "Only one answer is allowed."
            info;

            TooFewAnswers "There are too few answers, at least {MINANSWERS} are required."
            info;

            TooManyAnswers "There are too many answers, only {MAXANSWERS} are allowed."
            info;

            CannotCombine "Answer '{ANSWER}' ({CATEGORY}) cannot be combined with other answers."
            info;

            OtherNotSelected "Answer '{ANSWER}' ({CATEGORY}) has a response but is not selected."
            info;

            InvalidText "Answer '{ANSWER}' is not valid."
            info;

            TooLittleText "The answer does not have enough text, current length is {LENGTH}, minimum is {MINLENGTH}."
            info;

            TooMuchText "The answer has too much text, current length is {LENGTH}, maximum is {MAXLENGTH}."
            info;

            PlayerNavigationDisabled "You have used the browser buttons, please use the Next/Previous buttons below."
            info;

            QuestionMissingAnswer "Question '{QUESTION}' ({QUESTION_NUMBER}): Missing answer(s)."
            info;

            QuestionNotNumeric "Question '{QUESTION}' ({QUESTION_NUMBER}): Answer '{ANSWER}' is not numeric."
            info;

            QuestionNotInteger "Question '{QUESTION}' ({QUESTION_NUMBER}): Answer '{ANSWER}' is not an integer value."
            info;

            QuestionNotDate "Question '{QUESTION}' ({QUESTION_NUMBER}): Answer '{ANSWER}' is not a valid date."
            info;

            QuestionNotInRange "Question '{QUESTION}' ({QUESTION_NUMBER}): Answer '{ANSWER}' is not in range '{RANGE}'."
            info;

            QuestionNotSingleAnswer "Question '{QUESTION}' ({QUESTION_NUMBER}): Only one answer is allowed."
            info;

            QuestionTooFewAnswers "Question '{QUESTION}' ({QUESTION_NUMBER}): There are too few answers, at least {MINANSWERS} are required."
            info;

            QuestionTooManyAnswers "Question '{QUESTION}' ({QUESTION_NUMBER}): There are too many answers, only {MAXANSWERS} are allowed."
            info;

            QuestionCannotCombine "Question '{QUESTION}' ({QUESTION_NUMBER}): Answer '{ANSWER}' ({CATEGORY}) cannot be combined with other answers."
            info;

            QuestionOtherNotSelected "Question '{QUESTION}' ({QUESTION_NUMBER}): Answer '{ANSWER}' ({CATEGORY}) has a response but it is not selected."
            info;

            QuestionInvalidText "Question '{QUESTION}' ({QUESTION_NUMBER}): Answer '{ANSWER}' is not valid."
            info;

            QuestionTooLittleText "Question '{QUESTION}' ({QUESTION_NUMBER}): The answer does not have enough text, current length is {LENGTH}, minimum is {MINLENGTH}."
            info;

            QuestionTooMuchText "Question '{QUESTION}' ({QUESTION_NUMBER}): The answer has too much text, current length is {LENGTH}, maximum is {MAXLENGTH}."
            info;

            ThousandsSeparator "The thousands separator character is not allowed."
            info;

            QuestionThousandsSeparator "Question '{QUESTION}' ({QUESTION_NUMBER}): The thousands separator character is not allowed."
            info;

        );

        Navigations "Navigations" block fields
        (
            Next "Next"
            info;

            Prev "Back"
            info;

            Stop "Stop"
            info;

            First "First"
            info;

            Last "Last"
            info;

            GoTo "Goto"
            info;

        );

        EndOfInterview "End of interview. Thank you for your participation."
        info;

        InterviewStopped "End of interview. Thank you for your participation."
        info;

        AlreadyCompleted "The interview is already completed."
        info;

        "Codes" "Codes" block fields
        (
            DK "Don't know"
            info;

            NA "No answer"
            info;

            REF "Refused"
            info;

            "Other" "Other"
            info;

        );

    );

    txt "Standard Messages" block fields
    (
        ERR_MissingAns "Missing Answer(s)."
        info;

        ERR_Zero_Total "Total must not be '0'."
        info;

        ERR_More_Total "Your answer must be less than or equal to '{Num}'."
        info;

        ERR_Less_Total "Total must be greater than or equal to '{Num}'."
        info;

        ERR_Not_Total "Total must be equal to '{Num}'."
        info;

        ERR_Not_Total_Pos "Total must be equal to '{Num}' for '{Pos}'."
        info;

        ERR_SpecifyOtherValue "You have specified 'Other'. Please enter a value for that row."
        info;

        ERR_PleaseSpecify "Please Specify."
        info;

        ERR_SpecifyOtherResponse "You have specified 'Other'. Please select response(s) for that row."
        info;

        ERR_Exclusive "You can not select '{ANSWER}' with other options."
        info;

        ERR_FG_Fields "Please make sure to enter your first name, last name, telephone number and email address, or you can leave all the fields blank if you do not wish to participate in the focus group. We will only use your information to remind you of the upcoming focus group and to email you the reward."
        info;

        ERR_Invalid_Access "THE ACCESS CODE YOU ENTERED IS INCORRECT."
        info;

        ERR_Details "Please provide all details or select '{ANSWER}'."
        info;

    );

    '//////////////SAMPLE Variables''''''''''''''''''''
    ID "ID"
    text;

    Serial "Serial"
    text;

    tk "tk"
    text;

    PID "PID"
    text;

    PSID "PSID"
    text;

    TID "TID"
    text;

    GID "GID"
    text;

    sname "sname"
    text;

    RID "RID"
    text;

    sesskey "sesskey"
    text;

    identifier "identifier"
    text;

    memberid "memberid"
    text;

    transid "transid"
    text;

    UID "UID"
    text;

    SampleProvider "SampleProvider"
    categorical [1..1]
    {
        Innovate "Innovate",
        Dynata "Dynata",
        disqo "disqo",
        Toluna "Toluna",
        Lucid "Lucid",
        RFG "RFG",
        Cint "Cint",
        MarketCube "MarketCube",
        Solugo "Solugo",
        DataDiggers "DataDiggers",
        Paneland "Paneland",
        ThinkNow "ThinkNow",
        Prodege "Prodege",
        RepData "RepData",
        BrandedResearch "BrandedResearch",
        InternalSample "InternalSample",
        PureSpectrum "PureSpectrum",
        Provider18 "Provider18",
        Provider19 "Provider19",
        None "None"
    };

    Redir_Comp_URL "Holds only URL's for completes - to be passed to scott"
    categorical [1..1]
    {
        Innovate "https://edgeapi.innovatemr.net/surveyDone?sc=1&ejid=aP7BqWe6&tk={#tk}",
        Dynata "https://dkr1.ssisurveys.com/projects/end?rst=1&psid={#PSID}&basic={#SSI_BASIC}",
        disqo "https://go.activemeasure.com?status=9051&tid={#tid}",
        Toluna "http://ups.surveyrouter.com/soqualified.aspx?gid={#GID}&sname={#sname}",
        Lucid "https://notch.insights.supply/cb?token=e01462b1-2ce6-4ba0-93bd-9a0af75dad7f&RID={#RID}",
        RFG "https://survey.saysoforgood.com/result?result=C&sesskey={#sesskey}&password=wgtold",
        Cint "https://s.cint.com/Survey/Complete?ProjectToken=233c74c6-d3a5-47e2-a698-76dfd7623b76",
        MarketCube "https://surveys.sample-cube.com/ending/?RS=1&amp;RID={#RID}&amp;secret=821",
        Solugo "http://sampoolish.com/postredirect.php?status=c4ca4238a0b923820dcc509a6f75849b&pid=9813b270ed0288e7c0388f0fd4ec68f5&identifier={#identifier}&t=6ea2a267331097e09f3bdf0989bb8b57",
        DataDiggers "https://api-icontrol.datadiggers-mr.com/processfinish?status=1&dipe=G6VErxY1&memberid={#memberid}",
        Paneland "",
        ThinkNow "https://notch.insights.supply/cb?token=e9c0a39a-e543-47f6-a636-8239b080278f&RID={#RID}",
        Prodege "https://pod.prodegemr.com/prodegemr/unsigned-transaction-completion?apik=PAT!HMpwEa8t$I&transaction_id={#transid}&completion_type=1",
        RepData "https://notch.insights.supply/cb?token=2471886b-faeb-42bc-9751-accfe25b9a13&RID={#RID}",
        BrandedResearch "https://r.mintvine.com/success/?sc=4985d&uid={#UID}",
        InternalSample "https://www.google.com",
        PureSpectrum "https://spectrumsurveys.com/surveydone?st=21&transaction_id={#ID}",
        Provider18 "https://www.google.com",
        Provider19 "https://www.google.com"
    };

    Redir_Test_Comp "<meta http-equiv=""refresh"" content=""0;URL=https://workbench.mercuryanalytics.com/test-respondent?project={#ProjectName}&amp;rid={#Serial}&amp;source={#SampleProvider}&amp;pid={#ID}&amp;url={URL}""/>"
    info;

    Redir_Comp "Complete Redirects"
    categorical [1..1]
    {
        Innovate "<meta http-equiv=""refresh"" content=""0;URL=https://edgeapi.innovatemr.net/surveyDone?sc=1&amp;ejid=aP7BqWe6&amp;tk={#tk}""/>",
        Dynata "<meta http-equiv=""refresh"" content=""0;URL=https://dkr1.ssisurveys.com/projects/end?rst=1&amp;psid={#PSID}&amp;basic={#SSI_BASIC}""/>",
        disqo "<meta http-equiv=""refresh"" content=""0;URL=https://go.activemeasure.com?status=9051&amp;tid={#tid}""/>",
        Toluna "<meta http-equiv=""refresh"" content=""0;URL=http://ups.surveyrouter.com/soqualified.aspx?gid={#GID}&amp;sname={#sname}""/>",
        Lucid "<meta http-equiv=""refresh"" content=""0;URL=https://notch.insights.supply/cb?token=e01462b1-2ce6-4ba0-93bd-9a0af75dad7f&amp;RID={#RID}""/>",
        RFG "<meta http-equiv=""refresh"" content=""0;URL=https://survey.saysoforgood.com/result?result=C&amp;sesskey={#sesskey}&amp;password=wgtold""/>",
        Cint "<meta http-equiv=""refresh"" content=""0;URL=https://s.cint.com/Survey/Complete?ProjectToken=233c74c6-d3a5-47e2-a698-76dfd7623b76""/>",
        MarketCube "<meta http-equiv=""refresh"" content=""0;URL=https://surveys.sample-cube.com/ending/?RS=1&amp;RID={#RID}&amp;secret=821""/>",
        Solugo "<meta http-equiv=""refresh"" content=""0;URL=http://sampoolish.com/postredirect.php?status=c4ca4238a0b923820dcc509a6f75849b&amp;pid=9813b270ed0288e7c0388f0fd4ec68f5&amp;identifier={#identifier}&amp;t=6ea2a267331097e09f3bdf0989bb8b57""/>",
        DataDiggers "<meta http-equiv=""refresh"" content=""0;URL=https://api-icontrol.datadiggers-mr.com/processfinish?status=1&amp;dipe=G6VErxY1&amp;memberid={#memberid}""/>",
        Paneland "",
        ThinkNow "<meta http-equiv=""refresh"" content=""0;URL=https://notch.insights.supply/cb?token=e9c0a39a-e543-47f6-a636-8239b080278f&amp;RID={#RID}""/>",
        Prodege "<meta http-equiv=""refresh"" content=""0;URL=https://pod.prodegemr.com/prodegemr/unsigned-transaction-completion?apik=PAT!HMpwEa8t$I&amp;transaction_id={#transid}&amp;completion_type=1""/>",
        RepData "<meta http-equiv=""refresh"" content=""0;URL=https://notch.insights.supply/cb?token=2471886b-faeb-42bc-9751-accfe25b9a13&amp;RID={#RID}""/>",
        BrandedResearch "<meta http-equiv=""refresh"" content=""0;URL=https://r.mintvine.com/success/?sc=4985d&amp;uid={#UID}""/>",
        InternalSample "<meta http-equiv=""refresh"" content=""0;URL=https://www.google.com""/>",
        PureSpectrum "<meta http-equiv=""refresh"" content=""0;URL=https://spectrumsurveys.com/surveydone?st=21&amp;transaction_id={#ID}""/>",
        Provider18 "<meta http-equiv=""refresh"" content=""0;URL=https://www.google.com""/>",
        Provider19 "<meta http-equiv=""refresh"" content=""0;URL=https://www.google.com""/>",
        None "Thank you very much for your participation." '
        
    };

    Redir_term "Terminate Redirects"
    categorical [1..1]
    {
        Innovate "<meta http-equiv=""refresh"" content=""0;URL=https://edgeapi.innovatemr.net/surveyDone?sc=2&amp;tk={#TK}""/>",
        Dynata "<meta http-equiv=""refresh"" content=""0;URL=https://dkr1.ssisurveys.com/projects/end?rst=2&amp;psid={#PSID}""/>",
        disqo "<meta http-equiv=""refresh"" content=""0;URL=https://go.activemeasure.com?status=6735&amp;tid={#TID}""/>",
        Toluna "<meta http-equiv=""refresh"" content=""0;URL=http://ups.surveyrouter.com/soterminated.aspx?gid={#GID}&amp;sname={#sname}""/>",
        Lucid "<meta http-equiv=""refresh"" content=""0;URL=https://www.samplicio.us/s/ClientCallBack.aspx?RIS=20&amp;RID={#RID}""/>",
        RFG "<meta http-equiv=""refresh"" content=""0;URL=https://survey.saysoforgood.com/result?result=T&amp;sesskey={#sesskey}""/>",
        Cint "<meta http-equiv=""refresh"" content=""0;URL=https://s.cint.com/Survey/EarlyScreenOut?ProjectToken=65ccee1b-ef68-ec1f-7f6d-f5f729046b4e""/>",
        MarketCube "<meta http-equiv=""refresh"" content=""0;URL=https://surveys.sample-cube.com/ending/?RS=3&amp;RID={#RID}""/>",
        Solugo "<meta http-equiv=""refresh"" content=""0;URL=http://sampoolish.com/postredirect.php?status=c81e728d9d4c2f636f067f89cc14862c&amp;pid=9813b270ed0288e7c0388f0fd4ec68f5&amp;identifier={#identifier}""/>",
        DataDiggers "<meta http-equiv=""refresh"" content=""0;URL=https://api-icontrol.datadiggers-mr.com/processfinish?status=2&amp;memberid={#memberid}""/>",
        Paneland "",
        ThinkNow "<meta http-equiv=""refresh"" content=""0;URL=https://www.samplicio.us/s/ClientCallBack.aspx?RIS=20&amp;RID={#RID}""/>",
        Prodege "<meta http-equiv=""refresh"" content=""0;URL=https://pod.prodegemr.com/prodegemr/unsigned-transaction-completion?apik=PAT!HMpwEa8t$I&amp;transaction_id={#transid}&amp;completion_type=3""/>",
        RepData "<meta http-equiv=""refresh"" content=""0;URL=https://samplicio.us/s/ClientCallBack.aspx?RIS=20&amp;RID={#RID}""/>",
        BrandedResearch "<meta http-equiv=""refresh"" content=""0;URL=https://r.mintvine.com/nq/?sc=4985d&amp;uid={#UID}""/>",
        InternalSample "<meta http-equiv=""refresh"" content=""0;URL=https://www.google.com""/>",
        PureSpectrum "<meta http-equiv=""refresh"" content=""0;URL=https://spectrumsurveys.com/surveydone?st=18&amp;transaction_id={#ID}""/>",
        Provider18 "<meta http-equiv=""refresh"" content=""0;URL=https://www.google.com""/>",
        Provider19 "<meta http-equiv=""refresh"" content=""0;URL=https://www.google.com""/>",
        None "Thank you very much for your participation." '
        
    };

    Redir_OQ "OverQuota Redirects"
    categorical [1..1]
    {
        Innovate "<meta http-equiv=""refresh"" content=""0;URL=https://edgeapi.innovatemr.net/surveyDone?sc=3&amp;tk={#TK}""/>",
        Dynata "<meta http-equiv=""refresh"" content=""0;URL=https://dkr1.ssisurveys.com/projects/end?rst=3&amp;psid={#PSID}""/>",
        disqo "<meta http-equiv=""refresh"" content=""0;URL=https://go.activemeasure.com?status=4785&amp;tid={#TID}""/>",
        Toluna "<meta http-equiv=""refresh"" content=""0;URL=http://ups.surveyrouter.com/soquotafull.aspx?gid={#GID}&amp;sname={#sname}""/>",
        Lucid "<meta http-equiv=""refresh"" content=""0;URL=https://www.samplicio.us/s/ClientCallBack.aspx?RIS=40&amp;RID={#RID}""/>",
        RFG "<meta http-equiv=""refresh"" content=""0;URL=https://survey.saysoforgood.com/result?result=Q&amp;sesskey={#sesskey}""/>",
        Cint "<meta http-equiv=""refresh"" content=""0;URL=https://s.cint.com/Survey/QuotaFull?ProjectToken=65ccee1b-ef68-ec1f-7f6d-f5f729046b4e""/>",
        MarketCube "<meta http-equiv=""refresh"" content=""0;URL=https://surveys.sample-cube.com/ending/?RS=2&amp;RID={#RID}""/>",
        Solugo "<meta http-equiv=""refresh"" content=""0;URL=http://sampoolish.com/postredirect.php?status=eccbc87e4b5ce2fe28308fd9f2a7baf3&amp;pid=9813b270ed0288e7c0388f0fd4ec68f5&amp;identifier={#identifier}""/>",
        DataDiggers "<meta http-equiv=""refresh"" content=""0;URL=https://api-icontrol.datadiggers-mr.com/processfinish?status=3&amp;memberid={#memberid}""/>",
        Paneland "",
        ThinkNow "<meta http-equiv=""refresh"" content=""0;URL=https://www.samplicio.us/s/ClientCallBack.aspx?RIS=40&amp;RID={#RID}""/>",
        Prodege "<meta http-equiv=""refresh"" content=""0;URL=https://pod.prodegemr.com/prodegemr/unsigned-transaction-completion?apik=PAT!HMpwEa8t$I&amp;transaction_id={#transid}&amp;completion_type=2""/>",
        RepData "<meta http-equiv=""refresh"" content=""0;URL=https://samplicio.us/s/ClientCallBack.aspx?RIS=40&amp;RID={#RID}""/>",
        BrandedResearch "<meta http-equiv=""refresh"" content=""0;URL=https://r.mintvine.com/quota/?uid={#UID}""/>",
        InternalSample "<meta http-equiv=""refresh"" content=""0;URL=https://www.google.com""/>",
        PureSpectrum "<meta http-equiv=""refresh"" content=""0;URL=https://spectrumsurveys.com/surveydone?st=17&amp;transaction_id={#ID}""/>",
        Provider18 "<meta http-equiv=""refresh"" content=""0;URL=https://www.google.com""/>",
        Provider19 "<meta http-equiv=""refresh"" content=""0;URL=https://www.google.com""/>",
        None "Thank you very much for your participation." '
        
    };

    ''''SURVEY VARIABLES''''''''''''
    Comp "Complete Marker"
    categorical [1..1]
    {
        Started "Started",
        Completed "Completed",
        ScreenOut "Screen Out",
        OverQuota "Over Quota",
        M2MError "M2M Data Error",
        Marked "Respondent Marked Bad",
        ScriptError "Script Error"
    };

    TermPoint "Terminate Point"
    categorical [1..1]
    {
        SO01 "Screen Out at Q1", 'SO02 "Screen Out at Q1",
        'SO03 "Screen Out at Q1",
        'SO04 "Screen Out at Q1",
        'SO05 "Screen Out at Q1",
        'SO06 "Screen Out at Q1",
        'SO07 "Screen Out at Q1",
        'SO08 "Screen Out at Q1",
        'SO09 "Screen Out at Q1",
        'SO10 "Screen Out at Q1",
        RID "Revelant ID Check failed",
        IE "Respondent using Internet Explorer",
        Finger "Fingerprint Check failed",
        BOT "Bot check failed",
        Duplicate "Respondent details duplicated",
        PC "Link run from PC",
        OQ01 "Over Quota at Total",
        OQ02 "Over Quota at SampleProvider", 'OQ03 "Over Quota at Total",
        'OQ04 "Over Quota at Total",
        'OQ05 "Over Quota at Total",
        'OQ06 "Over Quota at Total",
        'OQ07 "Over Quota at Total",
        'OQ08 "Over Quota at Total",
        'OQ09 "Over Quota at Total",
        'OQ10 "Over Quota at Total",
        Provider "Invalid information of sample provider"
    };

    Sniffer "If you are not taken to the next page in the next 10 seconds, please use the button below to continue.<br/><br/>" block fields
    (
        js "Javascript enabled"
        long [0 .. 1]
        initialanswer(0 );

        screenres "Screen Resolution (width;height)"
        text
        initialanswer("unknown" );

        opsys "Operating System name"
        text
        initialanswer("unknown" );

        uagent "Full user agent string"
        text
        initialanswer("unknown" );

        product "Product name if known"
        text
        initialanswer("unknown" );

        flashVers "Version of flash installed - format is 10.0.12"
        text
        initialanswer("0.0.0" );

        complete_device_name "complete_device_name"
        text;

        form_factor "form_factor"
        text;

        fingerprint "fingerprint"
        text;

        IPADD "IP Address"
        text;

    );

    RespondentType "Respondent Type"
    categorical [1..1]
    {
        Option01 "Live Respondent",
        Option02 "Test Respondent"
    };

    M2MMode "M2MMode"
    categorical [1..1]
    {
        Option01 "",
        Option02 "data-hg-test=""true"""
    };

    QC_form_factor "form_factor"
    categorical [1..1]
    {
        Option01 "Desktop",
        Option02 "App",
        Option03 "Tablet",
        Option04 "Smartphone",
        Option05 "Feature Phone",
        Option06 "Smart-TV",
        Option07 "Robot",
        Option08 "Other non-Mobile",
        Option09 "Other Mobile",
        Option10 "Unknown"
    };

    QCombinedValue ""
    text [1..4096];

    SurveyStartTime "Start Time of survey"
    date;

    SurveyEndTime "End Time of survey"
    date;

    SurveyDuration "Duration of survey in minutes"
    long;

    ProjectName "Project Name"
    text;

    ProjectStatus "Project Status"
    text;

    '''''Bot Question'''''''
    BOT_QUESTION "{#BOT_QText}"
    long;

    BOT_QText ""
    categorical [1..1]
    {
        Option01 "To make sure you’re not a robot, here’s an easy math problem.  What is “{#QBOT_FIRST}” {#QBOT_OPERTAION} ""{#QBOT_SECOND}""?",
        Option02 "Sorry, that was incorrect. Please try again. What is “{#QBOT_FIRST}” {#QBOT_OPERTAION} ""{#QBOT_SECOND}""?"
    };

    QBOT_FIRST "First Number"
    categorical [1..1]
    {
        ' Option01 "1",
        Option02 "Two"
            [
                Num = "2"
            ],
        Option03 "Three"
            [
                Num = "3"
            ],
        Option04 "Four"
            [
                Num = "4"
            ],
        Option05 "Five"
            [
                Num = "5"
            ],
        Option06 "Six"
            [
                Num = "6"
            ],
        Option07 "Seven"
            [
                Num = "7"
            ],
        Option08 "Eight"
            [
                Num = "8"
            ],
        Option09 "Nine"
            [
                Num = "9"
            ],
        Option10 "Ten"
            [
                Num = "10"
            ]
    };

    QBOT_SECOND "Second Number"
    categorical [1..1]
    {
        Option01 "One"
            [
                Num = "1"
            ],
        Option02 "Two"
            [
                Num = "2"
            ],
        Option03 "Three"
            [
                Num = "3"
            ],
        Option04 "Four"
            [
                Num = "4"
            ],
        Option05 "Five"
            [
                Num = "5"
            ],
        Option06 "Six"
            [
                Num = "6"
            ],
        Option07 "Seven"
            [
                Num = "7"
            ],
        Option08 "Eight"
            [
                Num = "8"
            ],
        Option09 "Nine"
            [
                Num = "9"
            ]
    };

    QBOT_OPERTAION "OPERTAION"
    categorical [1..1]
    {
        Option01 "plus",
        Option02 "minus"
    };

    QBOTOK "Correct! Now we are ready to begin."
    info;

    QTA_TOTAL "Total Quota"
    categorical [1..1]
    {
        _01 "Total"
    };

    '''''''''''QUERTIONS GOES HERE''''''''''''''''''''
    Intro "Thank you for participating in this survey. We appreciate you sharing your opinions with us today.<br/><br/>We’re conducting this survey for research purposes only.<br/><br/>You may begin the survey by clicking “Next” below:"
    info;

    SINGLE_SELECT "Are you..."
    categorical [1..1]
    {
        Option01 "Male",
        Option02 "Female"
    };

    MULTIPUNCH "Which of the following best represents your ethnic or racial background?<br/><br/><i>Please select all that apply.</i>"
    categorical [1..1]
    {
        Option01 "White",
        Option02 "Black, African American, Caribbean, African",
        Option03 "Hispanic, Latino",
        Option04 "Asian-American, Asian, Pacific Islander",
        Option05 "Middle Eastern",
        Option06 "American Indian, Alaskan Native",
        Option07 "Other"
    };

    NUMERIC_OE "For statistical purposes, what is your age?"
    long [0 .. 100]
    codes(
    {
        ref "Prefer not to answer"
    } );

    '
    'NUMERIC OE “years old”
    'SLIDER LIQUID BUTTON “Prefer not to answer”
    SINGLE_SELECT_GRID "How familiar are you with the following brands?" loop
    {
        Option01 "Gucci",
        Option02 "Dior",
        Option03 "Yves St. Laurent",
        Option04 "Marc Jacobs",
        Option05 "Chanel"
    } ran fields -
    (
        GQ1 ""
        categorical [1..1]
        {
            Option01 "Very familiar",
            Option02 "Somewhat familiar",
            Option03 "Neutral",
            Option04 "Somewhat familiar",
            Option05 "Very familiar"
        };

    ) expand grid;

    LONG_GRID "Here are some arguments some people have made for why a woman’s right to choose to have an abortion should be protected. Please indicate whether you find the argument very compelling, somewhat compelling, not very compelling, or not at all compelling." loop
    {
        Option01 "The decision to have an abortion is a private and personal decision that should be between a woman and her doctor, and the government should not play a role. Banning abortions puts all Americans’ right to privacy in jeopardy.",
        Option02 "Protecting a woman’s right to choose is about giving women control over their lives and their bodies. Those who want to ban abortions want to control women by taking away a woman’s freedom to make her own health care decisions.",
        Option03 "Without access to safe and legal abortions, more women will be excluded from the economy and the workforce, and will end up living in poverty.",
        Option04 "Protecting a woman’s right to choose is essential to ensuring quality health care for women. Without access to safe and legal abortions, more women will be forced to have unhealthy and dangerous pregnancies.",
        Option05 "Abortion is a safe medical procedure that is only undertaken after careful consultation between a woman and her doctor.",
        Option06 "Protecting a woman’s right to choose is about ensuring gender equality. The decision whether or not to bear a child is central to a woman’s life and health, and when the government bans or restricts a woman’s right to an abortion, she is being treated as less than equal to men."
    } ran fields -
    (
        GQ1 ""
        categorical [1..1]
        {
            Option01 "Very compelling",
            Option02 "Somewhat compelling",
            Option03 "Not very compelling",
            Option04 "Not at all compelling",
            Option05 "Not sure"
        };

    ) expand grid;

    MULTIPUNCH_GRID "Of the brands you used in past 12 months, which of the following characteristics of the brands come to mind?<br/><br/>Please select all that apply." loop
    {
        Option01 "Gucci",
        Option02 "Dior",
        Option03 "Yves St. Laurent",
        Option04 "Marc Jacobs",
        Option05 "Chanel"
    } ran fields -
    (
        GQ1 ""
        categorical [1..1]
        {
            Option01 "Audience",
            Option02 "knowledge",
            Option03 "Leadership",
            Option04 "Distinctiveness",
            Option05 "Consistency",
            Option06 "Brand",
            Option07 "Loyalty",
            Option08 "Passion",
            Option09 "Competitiveness"
        };

    ) expand grid;

    SLIDER_SCALE "How likely are you to consider purchasing the items from following brands for yourself or for a gift?<br/><br/>On a scale of 1-10 please rate how likely are you to consider purchasing the following fragrances."
        [
            QuestionType = "slider"
        ]
    loop
    {
        Option01 "Gucci",
        Option02 "Dior",
        Option03 "Yves St. Laurent",
        Option04 "Marc Jacobs",
        Option05 "Chanel"
    } ran fields -
    (
        GQ1 ""
        categorical [1..1]
        {
            Option01 "1",
            Option02 "2",
            Option03 "3",
            Option04 "4",
            Option05 "5",
            Option06 "6",
            Option07 "7",
            Option08 "8",
            Option09 "9",
            Option10 "10"
        };

    ) expand grid;

    SLIDER_SCALE_2 "How likely are you to consider purchasing the items from following brands for yourself or for a gift?<br/><br/>On a scale of 1-10 please rate how likely are you to consider purchasing the following fragrances."
        [
            QuestionType = "RangeSlider"
        ]
    loop
    {
        Option01 "Gucci",
        Option02 "Dior",
        Option03 "Yves St. Laurent",
        Option04 "Marc Jacobs",
        Option05 "Chanel"
    } ran fields -
    (
        GQ1 ""
        long [1 .. 10];

    ) expand grid;

	lst_Drop "Select one" Define
	{
	Option01 "Artist",
        Option02 "Business analyst",
        Option03 "Construction worker",
        Option04 "Designer",
        Option05 "Entrepreneur",
        Option06 "Freelancer",
        Option07 "Social worker",
        Option08 "Retired"
	};
    DROP_DOWN_LIST "What is your current occupation?"
    categorical [1..1]
    {
        use lst_Drop sulist
    };

    Intro_M2M "Now we’re going to do something fun!<br/><br/>In a moment, you’re going to watch five minutes of tonight’s live evening news. As you watch, you’ll be able to rate the broadcast on a second-by-second basis, raising or lowering your rating as your feelings change about what you are seeing and hearing.<br/><br/>Don’t worry – it’s easy!<br/><br/>Let's begin by showing you how it works.  After that, you’ll be ready to watch and rate the broadcast. Please make sure that your computer’s sound is turned on and up!<br/><br/>When you’re ready to proceed, click the “Next” button below."
    info;

    M2MDiv "<div data-hg-recorder=""{INS}"" data-hg-rid=""{Serial}""></div>"
    info;

    M2M_Instruction "{M2MDiv}"
    info;

    Intro_Anim "<script> var identifier = '1760_BBB';</script>Now it’s your turn to watch and rate the broadcast.<br/><br/>As you watch, we want you to consider how believable what you are seeing and hearing is.<br/><br/>{M2MDiv}<br/><br/>The <b><i>more believable the broadcast is to you</i></b>, the more to the <b><i>RIGHT</i></b> you should move the slider towards “<b><i>VERY BELIEVABLE</i></b>”.<br/><br/>The <b><i>less believable the broadcast is to you</i></b>, the more to the <b><i>LEFT</i></b> you should move the slider towards “<b><i>NOT BELIEVABLE</i></b>”.<br/><br/>Remember to keep moving the slider, reacting to everything you see and hear, so it always reflects your current opinion.<br/><br/>When you’re ready to proceed, click the “Next” button below."
        [
            QuestionType = "M2MAnimationVideo"
        ]
    info;

    StraightLiner "StraightLiner Questions"
    categorical [0..]
    {
        Q1 "Q1"
    };

    M2M_Video "{M2MDiv}"
    text [0..];

    InfoIdle "Are you still there? Please remember to keep rating as your reaction to the presentation changes.  Would you like to continue watching and rating the presentation?<br/><center><table><tr><td><Input type='button' class='mrNext2' id='idleYes' value='Yes'/></td><td style='width:50px;'></td><td><Input type='button' class='mrNext2' id='idleNo' value='No' /></td></tr></table></center>"
    text [0..];

    ''''''''''''''STRAIGHT LINER'''''''''''''''
    StraightLinerCount "StraightLinerCount"
    categorical [1..1]
    {
        Option01 "1",
        Option02 "2",
        Option03 "3",
        Option04 "4",
        Option05 "5",
        Option06 "6",
        Option07 "7",
        Option08 "8",
        Option09 "9",
        Option10 "10",
        Option11 "11",
        Option12 "12",
        Option13 "13",
        Option14 "14",
        Option15 "15"
    };

    PageStraightLiner ""
    page(
        StraightLiner,
        StraightLinerCount
    );
End Metadata
Routing(Web)

'If NOT(IOM.Info.IsDebug) Then On Error Goto __DefaultErrHandler
EnableBotCheck = True
EnableDuplicateCheck = True
ENABLESLACKALERT = True
IsMobile = false
IOM.LayoutTemplate = "Template/DefaultLayout.htm"
IOM.Banners.AddNew("QName","")
IOM.Banners.AddNew("LOGOS","")
IOM.Banners.AddNew("footer","")
If IOM.Info.IsDebug Or IOM.Info.IsTest Then 
Else
	IOM.Banners.AddNew("JSx","<script>history.pushState(null, document.title, location.href);window.addEventListener(""popstate"", function() { history.pushState(null, document.title, location.href); });</script>")
End IF
IOM.Banners["LOGOS"].Text = "<mrRef class=""logo"" RefType=""img"" src=""Template/Images/Mercury.gif""/>"

SetSampleProvider(IOM)
getProjectStatus(IOM)
SetGridLayout(IOM)
Section Sniffer
	Sniffer.LayoutTemplate = "Template/SnifferLayout.htm"
	Sniffer.QuestionTemplate = "Template/Sniffer.htm"
	Sniffer.js.Banners.AddNew("Sniffer", "<script type='text/javascript'>InitPageActions('2');</script>")
	
	If NOT(IOM.Info.IsDebug) Then Sniffer.Ask()
	
	If Find(Sniffer.complete_device_name.Response,"'") > -1 Then
		Sniffer.complete_device_name.Response = Replace(Sniffer.complete_device_name.Response,"'","/")
	End If
	
	If Trim(UCASE(Sniffer.fingerprint.Response)) = Trim(Ucase("TERM")) Then
		TermPoint.Response = {Finger}
'		Goto CheckScreenOut
	End If
	Dim CatForm
	For Each CatForm in QC_form_factor.Categories
		If UCase(CatForm.Name) <> UCase("Option10") Then
			If UCase(CatForm.Label) = UCase(Sniffer.form_factor.Response) Then
				QC_form_factor.Response = CCategorical(CatForm.Name)
			End IF
		End If
	Next
	If IsEmpty(QC_form_factor) Then
		QC_form_factor.Response = {Option10}
	End If

End Section
Section BotCheck
	if EnableBotCheck Then
		Dim BotCount, botResult
		BotCount = 0
		botResult = true
		BOT_QText.Response = {Option01}
		do 
			BotCount = BotCount + 1
			if BotCount> 1 Then BOT_QText.Response = {Option02}
			If BotCount = 1 then
				QBOT_FIRST.Categories.Order = OrderConstants.oRandomize
				QBOT_FIRST.Response = QBOT_FIRST.Categories[0]
				Select Case QBOT_FIRST.Response
					Case {Option02}
						QBOT_SECOND.Categories.Filter = {Option01}
					Case {Option03}
						QBOT_SECOND.Categories.Filter = {Option01,Option02}
					Case {Option04}
						QBOT_SECOND.Categories.Filter = {Option01,Option02,Option03}
					Case {Option05}
						QBOT_SECOND.Categories.Filter = {Option01,Option02,Option03,Option04}
					Case {Option06}
						QBOT_SECOND.Categories.Filter = {Option01,Option02,Option03,Option04,Option05}
					Case {Option07}
						QBOT_SECOND.Categories.Filter = {Option01,Option02,Option03,Option04,Option05,Option06}
					Case {Option08}
						QBOT_SECOND.Categories.Filter = {Option01,Option02,Option03,Option04,Option05,Option06,Option07}
					Case {Option09}
						QBOT_SECOND.Categories.Filter = {Option01,Option02,Option03,Option04,Option05,Option06,Option07,Option08}
					Case {Option10}
						QBOT_SECOND.Categories.Filter = {Option01,Option02,Option03,Option04,Option05,Option06,Option07,Option08,Option09}
				End Select
				QBOT_SECOND.Categories.Order = OrderConstants.oRandomize
				QBOT_SECOND.Response = QBOT_SECOND.Categories[0]
				QBOT_OPERTAION.Categories.Order = OrderConstants.oRandomize
				QBOT_OPERTAION.Response = QBOT_OPERTAION.Categories[0]
			End If
			BOT_QUESTION.Style.Width = "3ex"
			BOT_QUESTION.Style.Control.Type = ControlTypes.ctNumber
'			BOT_QUESTION.Ask()
			Dim Result
			If ContainsAny(QBOT_OPERTAION,{Option01}) Then
				Result = Clong(QBOT_FIRST.Categories[QBOT_FIRST.Response].Properties["Num"]) + Clong(QBOT_SECOND.Categories[QBOT_SECOND.Response].Properties["Num"])
			Else
				Result = Clong(QBOT_FIRST.Categories[QBOT_FIRST.Response].Properties["Num"]) - Clong(QBOT_SECOND.Categories[QBOT_SECOND.Response].Properties["Num"])
			End If
			If BOT_QUESTION.Response <> Result Then	
				botResult = false
				BOT_QUESTION.Response = NULL
			Else
				botResult = true
			End If
		loop while botResult = false AND BotCount < 2
		If botResult = false Then
			TermPoint.Response = {BOT}
'				Goto CheckScreenOut
		End If
		QBOTOK.Ask()
	End If
End Section

IOM.CustomPropertiesContext = "Question"
'TestScreen(IsMobile,IOM,1)
if IOM.Info.IsDebug Then goto ppp

PPP:
Intro.Ask()
SINGLE_SELECT.Ask()
MULTIPUNCH.Ask()
NUMERIC_OE.Ask()
SINGLE_SELECT_GRID.Ask()
LONG_GRID.Ask()


MULTIPUNCH_GRID.Ask()
SLIDER_SCALE.Categories[..].Label.Style.cell.Width = "10em"
SLIDER_SCALE.Ask()

SLIDER_SCALE_2[..].GQ1.Style.Control.Type = ControlTypes.ctRange
SLIDER_SCALE_2.Ask()

DROP_DOWN_LIST.Style.Control.Type = ControlTypes.ctDropList
DROP_DOWN_LIST.Ask()

Intro_M2M.Show()

M2MDiv.Label.Inserts["INS"].Text = "1760_BBB"
M2MDiv.Label.Inserts["Serial"].Text = "!instructions"
M2M_Instruction.Label.Inserts["M2MDiv"].Text = M2MDiv.Label
M2M_Instruction.LayoutTemplate = "Template/M2M.htm"
M2M_Instruction.Show()

M2MDiv.Label.Inserts["Serial"].Text = "!animation"
Intro_Anim.Label.Inserts["M2MDiv"].Text = M2MDiv.Label
Intro_Anim.LayoutTemplate = "Template/M2M.htm"
Intro_Anim.Show()


M2MDiv.Label.Inserts["Serial"].Text = IOM.Info.Serial
M2M_Video.Banners.AddNew("infoidle",InfoIdle.Label)
M2M_Video.Label.Inserts["M2MDiv"].Text = M2MDiv.Label
M2M_Video.LayoutTemplate = "Template/M2M.htm"
M2M_Video.Ask()

Section SubRoutines
	Sub SetSampleProvider(IOM)
		IOM.Questions["ID"].Response = TRIM(IOM.SampleRecord["ID"].Value)
		IOM.Questions["Serial"].Response = IOM.Info.Serial
		IOM.Questions["SurveyStartTime"].Response = NOW()
		IOM.Questions["ProjectName"].Response = IOM.ProjectName.UCase()
		
		Select case IOM.SampleRecord["SMP"].Value
			Case "1"
				IOM.Questions["SampleProvider"].Response = {Innovate}
				IOM.Questions["tk"].Response = TRIM(IOM.SampleRecord["tk"].Value)
			Case "2"
				IOM.Questions["SampleProvider"].Response = {Dynata}
				IOM.Questions["PID"].Response = TRIM(IOM.SampleRecord["PID"].Value)
				IOM.Questions["PSID"].Response = TRIM(IOM.SampleRecord["PSID"].Value)
			Case "3"
				IOM.Questions["SampleProvider"].Response = {disqo}
				IOM.Questions["TID"].Response = TRIM(IOM.SampleRecord["TID"].Value)
			Case "4"
				IOM.Questions["SampleProvider"].Response = {Toluna}
				IOM.Questions["GID"].Response = TRIM(IOM.SampleRecord["GID"].Value)
				IOM.Questions["sname"].Response = TRIM(IOM.SampleRecord["sname"].Value)
			Case "5"
				IOM.Questions["SampleProvider"].Response = {Lucid}
				IOM.Questions["ID"].Response = TRIM(IOM.SampleRecord["ID"].Value)
				IOM.Questions["RID"].Response = TRIM(IOM.SampleRecord["RID"].Value)
			Case "6"
				IOM.Questions["SampleProvider"].Response = {RFG}
				IOM.Questions["sesskey"].Response = TRIM(IOM.SampleRecord["sesskey"].Value)
			Case "7"
				IOM.Questions["SampleProvider"].Response = {Cint}
			Case "8"
				IOM.Questions["SampleProvider"].Response = {MarketCube}
				IOM.Questions["RID"].Response = TRIM(IOM.SampleRecord["RID"].Value)
			Case "9"
				IOM.Questions["SampleProvider"].Response = {Solugo}
				IOM.Questions["identifier"].Response = TRIM(IOM.SampleRecord["identifier"].Value)
			Case "10"
				IOM.Questions["SampleProvider"].Response = {DataDiggers}
				IOM.Questions["memberid"].Response = TRIM(IOM.SampleRecord["memberid"].Value)
			Case "11"
				IOM.Questions["SampleProvider"].Response = {Paneland}
			Case "12"
				IOM.Questions["SampleProvider"].Response = {ThinkNow}
				IOM.Questions["RID"].Response = TRIM(IOM.SampleRecord["RID"].Value)
			Case "13"
				IOM.Questions["SampleProvider"].Response = {Prodege}
				IOM.Questions["transid"].Response = TRIM(IOM.SampleRecord["transid"].Value)
			Case "14"
				IOM.Questions["SampleProvider"].Response = {RepData}
				IOM.Questions["RID"].Response = TRIM(IOM.SampleRecord["RID"].Value)
			Case "15"
				IOM.Questions["SampleProvider"].Response = {BrandedResearch}
				IOM.Questions["UID"].Response = TRIM(IOM.SampleRecord["UID"].Value)
			Case "16"
				IOM.Questions["SampleProvider"].Response = {InternalSample}
			Case "17"
				IOM.Questions["SampleProvider"].Response = {PureSpectrum}
			Case "18"
				IOM.Questions["SampleProvider"].Response = {Provider18}
			Case "19"
				IOM.Questions["SampleProvider"].Response = {Provider19}
			Case Else
				IOM.Questions["SampleProvider"].Response = {None}
		End Select
		
		''/////////////////////////////////////////////////
		''				NAVIGATINONS
		''/////////////////////////////////////////////////
		IOM.Navigations[NavigationTypes.nvPrev].style.width = NULL
		IOM.Navigations.Remove(NavigationTypes.nvPrev)
		
		
		if (IOM.Info.IsTest or IOM.Info.IsDebug) then
			IOM.Navigations.Add(NavigationTypes.nvPrev)
		Else
			'===    Turn off Browser Navigation            ===
			'==============================================
	'	    IOM.Info.UsePlayerNavigation = false
		end if
		IOM.Navigations[NavigationTypes.nvNext].style.width = NULL
		IOM.Info.EstimatedPages = 0
	End Sub
	Sub HideCell(Question)
		Question.Categories[..].Label.Style.Width = "0px"
		Question.Categories[..].Label.Style.Cell.BorderStyle = BorderStyles.bsNone
		Question.Categories[..].Label.Style.Cell.BorderColor = "none"
		Question.Categories[..].Label.Style.Cell.BgColor = "none"
		Question.Categories[..].Label.Style.Cell.BorderWidth = 0
		Question.Categories[..].Label.Style.Cell.Width = "0px"
	End Sub
	
	Sub StraightLiner(Question,IOM)
		Dim StraightLiner, StraightLinerCount
		Set StraightLiner = IOM.Questions["StraightLiner"]
		Set StraightLinerCount = IOM.Questions["StraightLinerCount"]
		IF ChkStraightLiner(Question) Then
			StraightLiner.Response = StraightLiner.Response + CCategorical(Question.QuestionName)
			If AnswerCount(StraightLiner)<10 Then
				StraightLinerCount.Response = CCategorical(MakeString("Option0",AnswerCount(StraightLiner)))
			Else
				StraightLinerCount.Response = CCategorical(MakeString("Option",AnswerCount(StraightLiner)))
			End If
			TestScreen(StraightLiner,IOM,0)
			TestScreen(StraightLinerCount,IOM,0)
		End If
	End Sub
	Sub getProjectStatus(IOM)
		Dim ProjectStatus
		Set ProjectStatus = IOM.Questions["ProjectStatus"]
		if NOT iom.Info.IsDebug then
			Dim objConnection
			Dim objRecordSet
			Set objConnection = CreateObject("ADODB.Connection")
			Set objRecordset = CreateObject("ADODB.Recordset")
			objConnection.Open("Provider=SQLOLEDB.1;Integrated Security=SSPI;Persist Security Info=False;Initial Catalog=mrInterviewData;Data Source=EC2AMAZ-07P143H")
			objRecordset.Open("SELECT Name,Status from Projects where Name = '" + ctext(IOM.Questions["ProjectName"].Response) + "'" , objConnection)
			If objRecordSet.BOF = False Or objRecordSet.EOF = False Then
				ProjectStatus.Response = objRecordSet.Fields["Status"].Value
				objConnection.Close()
			Else
				objConnection.Close()
			End If
		End If
	End Sub
	
	Sub TestScreen(Question,IOM,Mode)
		Mode = IIF(IOM.Info.User5="T",3,Mode)
	    Dim Q,pageQ
	    Set Q = Question
	    
	    ''' if page question
	    If Question.QuestionType = QuestionTypes.qtPage Then
	    	If IOM.Info.IsTest Or IOM.Info.IsDebug Then
				for Each pageQ in Question.QuestionFilter
					Set Q = IOM.Questions[pageQ]
					If HasBanner(Q,"Test") Then
					    Q.Banners.addNew("Test","<b><font color = 'red'>FOR TESTING ONLY - Question will not appear in live link</font></b>")
					Else
					    Q.Banners.Remove("Test")
					    Q.Banners.addNew("Test","<b><font color = 'red'>FOR TESTING ONLY - Question will not appear in live link</font></b>")
					End IF
				Next
				Select Case Mode
				    Case "0"
				          Question.Show()
	'			          IOM.Banners.Clear()
				    Case "1"
				          Question.Ask()
	'			          IOM.Banners.Clear()
				    Case "3"
				    Case Else
				          Debug.MsgBox("Please Enter Proper MODE Value (""0"" Or ""1"")")
				End Select
		    End If
	    Else ''normal question
		    If IOM.Info.IsTest Or IOM.Info.IsDebug Then
		          If HasBanner(Q,"Test") Then
		                Q.Banners.addNew("Test","<b><font color = 'red'>FOR TESTING ONLY - Question will not appear in live link</font></b>")
		          Else
		                Q.Banners.Remove("Test")
		                Q.Banners.addNew("Test","<b><font color = 'red'>FOR TESTING ONLY - Question will not appear in live link</font></b>")
		          End IF
		          Select Case Mode
		                Case "0"
		                      Q.Show()
		                Case "1"
		                      Q.Ask()
		                Case "3"
		                Case Else
		                      Debug.MsgBox("Please Enter Proper MODE Value (""0"" Or ""1"")")
		          End Select
		    End If
		End If
	    IOM.Info.EstimatedProgress = IOM.Info.EstimatedProgress - 1
	End Sub
	Sub Sendmail(email_To,Email_Subject,Email_HtmlBody,IOM)
		Dim emailObj, emailConfig
		Set emailObj      = CreateObject("CDO.Message")
		emailObj.From     = email_To '"surveyhelper@mercuryanalytics.com"
		emailObj.To       = "ronh@mercuryanalytics.com"
		emailObj.BCC	  = "SURVEYS@mercuryanalytics.com"
		If IOM.Info.IsTest Then
			emailObj.Subject  = MakeString("Test: ",Email_Subject) '"M2M Error in: " + IOM.ProjectName
		Else
			emailObj.Subject  = Email_Subject '"M2M Error in: " + IOM.ProjectName
		End If
		emailObj.HTMLBody = Email_HtmlBody 'MakeString(M2MError_Email.Response," is ready to be contacted.")
	'		Error_Txt.Response = 
	
		Set emailConfig = emailObj.Configuration
		emailConfig.Fields["http://schemas.microsoft.com/cdo/configuration/smtpserver"].Value		= "smtp.gmail.com"
		emailConfig.Fields["http://schemas.microsoft.com/cdo/configuration/smtpserverport"].Value   = 465
		emailConfig.Fields["http://schemas.microsoft.com/cdo/configuration/sendusing"].Value  	    = 2
		emailConfig.Fields["http://schemas.microsoft.com/cdo/configuration/smtpauthenticate"].Value = 1
		emailConfig.Fields["http://schemas.microsoft.com/cdo/configuration/smtpusessl"].Value  	    = true
		emailConfig.Fields["http://schemas.microsoft.com/cdo/configuration/sendusername"].Value     = "mercurysurveyhelper@gmail.com"
		emailConfig.Fields["http://schemas.microsoft.com/cdo/configuration/sendpassword"].Value     = "Mercury_1234"
		emailConfig.Fields.Update()
		
		emailObj.Send()
	End Sub
End Section
Section Functions
	Function HasBanner(Question, BannerName)
	    On Error Goto ErrorBan
	          Question.Banners.Addnew(BannerName,"Test")
	          Question.Banners.Remove(BannerName)
	          HasBanner = True
	    Exit Function
	          ErrorBan:
	          HasBanner = False
	End Function

	Function CreateFilterUsingLeastFullQuota(Categories, Quotas) 
		Dim pended_quota 
		Dim filter 
		For Each pended_quota In Quotas.WasPendedList
			filter = filter + GetCategoryFromQuota(Categories, pended_quota) 
		Next 
		CreateFilterUsingLeastFullQuota = filter 
	End Function 
	
	Function GetCategoryFromQuota(Categories, Quota) 
		Dim category
		GetCategoryFromQuota = "{}" 
		For Each category in Categories 
			If (Find(Quota.Expression, "{" + category.Name + "}") >= 0) Then 
				GetCategoryFromQuota = CCategorical(category) 
				Exit Function 
			End If 
		Next 
	End Function

	Function ChkStraightLiner(Question)
		Dim Cat, Cat1
		ChkStraightLiner = True
		If Question.Categories.Count <= 3 Then 
			ChkStraightLiner = False
			Exit Function
		End if

		For Each Cat in Question.categories
			For Each Cat1 in Question.categories
				If Cat <> Cat1 Then
					If Question[Cat].item[0].Response <> Question[Cat1].item[0].Response Then
						ChkStraightLiner = False
						Exit Function
					End IF
				End IF
			Next
		Next
	End Function
	Function CatSlicer(FilterQuestion, Filter)
		Dim ResponseSet
		Dim Slice
		ResponseSet = {}
		For Each Slice In FilterQuestion
    		If ContainsAny(Slice.Item[0], Filter) Then
        		ResponseSet = ResponseSet + CCategorical(Slice.QuestionName)
    		End If
		Next
		CatSlicer = ResponseSet
	End Function
	
	Function URLEncode(sStr)
	    Dim i, acode
	    URLEncode = sStr
	    Dim URLNew
	    URLNew = ""
	    For i = 0 to Len(URLEncode) -1
	        acode = AscW(Mid(URLEncode, i, 1))
	        If (aCode >=48 And aCode <=57) Or (aCode >= 65 And aCode <=90) Or (aCode >= 97 And aCode <=122) Then
	        ' don't touch alphanumeric chars
	        	URLNew = MakeString(URLNew,Mid(URLEncode, i, 1))
	        Else
	            Select Case acode
	            Case 32
	                ' replace space with "+"
	                URLNew = MakeString(URLNew,"+")
	            Case Else
	                ' replace punctuation chars with "%hex"
	                URLNew = MakeString(URLNew,"%",Hex(acode))	
	            End Select
	        End If
	    Next
	    URLEncode = URLNew
	End Function

	
End Section

Sub SetGridLayout(IOM)
	With IOM.DefaultStyles.Questions[QuestionStyleTypes.qsCompound]
		.Style.VerticalAlign = VerticalAlignments.vaBottom
		.Style.Align = Alignments.alCenter
		.Categories[..].Label.Cell.BorderColor = "#000000"
		.Categories[..].Label.Cell.BorderWidth = "1"
		.Categories[..].Label.Cell.Borderstyle = BorderStyles.bsSolid
  	End With
		'Head Column
	With IOM.DefaultStyles.Grids[GridStyleTypes.gsColHeader]
		.VerticalAlign = VerticalAlignments.vaBottom
		.Align = Alignments.alCenter
		.Cell.BgColor = "#fcb169"
		.Color = "#000000"
		.Cell.BorderColor = "#000000"
		.Cell.BorderStyle = BorderStyles.bsSolid
		.Cell.BorderWidth = 1
		.Cell.Padding = 4
  	End With
  		'Alternate Cells
'  	IOM.DefaultStyles.Grids[GridStyleTypes.gsAltRow].Cell.BgColor = "#A0CFF1"
'  	IOM.DefaultStyles.Grids[GridStyleTypes.gsAltRowHeader].Cell.BgColor = "#A0CFF1"
		'All Cells
  	With IOM.DefaultStyles.Grids[GridStyleTypes.gsCell]
		.Cell.BorderColor = "#000000"
		.Cell.BorderStyle = BorderStyles.bsSolid
		.Cell.BorderWidth = 1
		.Cell.Padding = 4
		.Cell.Width = "8vw"
  	End With
		'Head Row
  	With IOM.DefaultStyles.Grids[GridStyleTypes.gsRowHeader]
		.Cell.BorderColor = "#000000"
		.Cell.BorderStyle = BorderStyles.bsSolid
		.Cell.BorderWidth = 1
   		.Cell.Padding = 4
   		.Cell.Width = "15vw"
  	End With
	With IOM.DefaultStyles
		  .Categories[CategoryStyleTypes.csExclusive].Label.Font.Effects = Null 'Turn off bolding for mutually exclusive
	End With
	
End Sub
End Routing
